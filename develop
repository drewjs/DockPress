#!/usr/bin/env bash

# Set environment variables for local
export APP_PORT=${APP_PORT:-80}
export APP_PORT_SECURE=${APP_PORT_SECURE:-443}
export DB_HOST=${DB_HOST:-database}
export DB_PORT=${DB_PORT:-3306}
export DB_ROOT_PASS=${DB_ROOT_PASS:=secret}
export DB_NAME=${DB_NAME:=wordpress}
export DB_USER=${DB_USER:=wordpress}
export DB_PASS=${DB_PASS:=secret}

# Environment
COMPOSE_FILE="dev"
COMPOSE="docker-compose -f docker-compose.$COMPOSE_FILE.yml"

if [ $# -gt 0 ]; then
  # If "composer" is used, pass-thru to "composer"
  # inside a new container
  if [ "$1" == "composer" ]; then
      shift 1
      $COMPOSE run --rm $TTY \
          -w /var/www/html \
          web \
          composer "$@"

  # If "wp" is used, pass-thru to "wp-cli"
  elif [ "$1" == "wp" ]; then
      shift 1
      $COMPOSE run --rm $TTY \
          -w /var/www/html \
          web \
          wp --allow-root "$@"

  # if "init" is used, make the src directory and
  # install latest version of Bedrock. Afterwards
  # install a Sage theme into Bedrock's theme folder
  # with the name specified as the argument after "init".
  # By default the dev-master version of Sage will
  # be used.
  elif [ "$1" == "init" ]; then
    shift 1
    mkdir src
    $COMPOSE run --rm $TTY \
        -w /var/www/html \
        web \
        composer create-project roots/bedrock .
    $COMPOSE run --rm $TTY \
        -w /var/www/html/web/app/themes \
        web \
        composer create-project roots/sage $1 dev-master
  # Else, pass-thru args to docker-compose
  else
    $COMPOSE "$@"
  fi
else
  $COMPOSE ps
fi
